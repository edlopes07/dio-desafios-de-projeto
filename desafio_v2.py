# -*- coding: utf-8 -*-
"""desafio v2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/187XTjoPvLwkN7kb4sjnOgqUpewQjp3_F
"""

def menu():
  menu = """\n
  ========== MENU ==========
  [1]\tDepositar
  [2]\tSacar
  [3]\tExtrato
  [4]\tNovo usuário
  [5]\tNova conta
  [6]\tListar contas
  [0]\tSair
  => """
  return input(menu)

def depositar(saldo, valor, extrato, /):
  if valor < 0:
      print("Não é possível depositar esse valor, por favor selecione novamente a opção desejada.")

  else:
    saldo += valor
    extrato += f"Depósito:\t\tR${valor:.2f}\n"
    print("===== O depósito foi bem-sucedido! =====")

  return saldo, extrato

def sacar(*, saldo, valor, extrato, limite, numero_saques, limite_saques):
  excedeu_saldo = valor > saldo
  excedeu_limite = valor > limite
  excedeu_saques = numero_saques >= limite_saques

  if excedeu_saldo:
    print("\n Operação falhou! \n Você não possui saldo suficiente!")

  elif excedeu_limite:
    print("\n Operação falhou! \n Você ultrapassou o limite de R$500,00 por saque. Por favor, tente novamente.")

  elif excedeu_saques:
    print("O limite de saques diários foi atingido. Por favor, volte amanhã!")

  elif valor < 0:
    print("\n Operação falhou! \n O valor informado é inválido.")

  else:
    saldo -= valor
    extrato += f"Saque:\t\tR${valor:.2f}\n"
    numero_saques += 1
    print("===== Saque realizado com sucesso! =====")

  return saldo, extrato, numero_saques

def exibir_extrato(saldo, /, *, extrato):
    print("\n========== EXTRATO ==========")
    print("Não foram realizadas movimentações." if not extrato else extrato)
    print(f"\nSaldo: R${saldo:.2f}")
    print("=============================")

def criar_usuario(usuarios):
  cpf = input("Informe o CPF (somente número): ")
  usuario = filtrar_usuario(cpf, usuarios)

  if usuario:
    print("\nJá existe um usuário com esse CPF!")
    return

  nome = input("Informe seu nome completo: ")
  data_nascimento = input("Informe sua data de nascimento (dd-mm-aaaa): ")
  endereco = input("Informe o seu endereço (logradouro, nro - bairro - cidade/sigla estado): ")

  usuarios.append({"nome": nome, "data_nascimento":data_nascimento, "cpf":cpf, "endereco":endereco})

  print("===== Usuário cadastrado com sucesso! =====")

def filtrar_usuario(cpf, usuarios):
  usuarios_filtrados = [usuario for usuario in usuarios if usuario["cpf"] == cpf]
  return usuarios_filtrados[0] if usuarios_filtrados else None

def criar_conta(agencia, numero_conta, usuarios):
  cpf = input("Informe o CPF do usuário: ")
  usuario = filtrar_usuario(cpf, usuarios)

  if usuario:
    print("\n===== Conta criada com sucesso! =====")
    return {"agencia":agencia, "numero_conta": numero_conta, "usuario": usuario}
  print("\nUsuário não encontrado, fluxo de criação de conta encerrado!")

def listar_contas(contas):
  for conta in contas:
    linha = f"""\
    Agência:\t{conta['agencia']}
    C/C:\t{conta['numero_conta']}
    Titular:\t{conta['usuario']['nome']}
    """
    print("=" * 100)
    print(linha)

def main():
  LIMITE_SAQUES = 3
  AGENCIA = "0001"

  saldo = 0
  valor = 0
  limite = 500
  extrato = ""
  numero_saques = 0
  LIMITE_SAQUES = 3
  usuarios = []
  contas = []

  while True:
    opcao = menu()

    if opcao == "1":
      valor = float(input("Informe o valor do depósito: R$"))
      saldo, extrato = depositar(saldo, valor, extrato)

    elif opcao == "2":
      valor = float(input("Insira o valor que deseja sacar: R$"))

      saldo, extrato, numero_saques = sacar(
        saldo=saldo,
        valor=valor,
        extrato=extrato,
        limite=limite,
        numero_saques=numero_saques,
        limite_saques=LIMITE_SAQUES,
      )

    elif opcao == "3":
      exibir_extrato(saldo, extrato=extrato)

    elif opcao == "4":
      criar_usuario(usuarios)

    elif opcao == "5":
      numero_conta = len(contas) + 1
      conta = criar_conta(AGENCIA, numero_conta, usuarios)

      if conta:
        contas.append(conta)

    elif opcao == "6":
      listar_contas(contas)

    elif opcao == "0":
      break

    else:
      print("Operação inválida, por favor selecione novamente a opção desejada.")

main()